#include <stdio.h>
#include <stdlib.h>
#include <string.h>
struct special{
  int index;
  char comanda[31];
  int pozitii;
  struct special *next;
};
struct baza_date{
    struct special **speciale;
};
struct special *adauga_special(struct special *head,int index, char com[31], int pozitii){
    struct special *ptr, *nod_nou;
    if(head==NULL){
        head=(struct special*) malloc (sizeof(struct special));
    if(head!=NULL){
        head->index=index;
        strcpy(head->comanda,com);
        head->pozitii=pozitii;
        head->next=NULL;
    }
    return head;
    }
     ptr=head;
     while(ptr->next!=NULL){
         ptr=ptr->next;
     }
     nod_nou=(struct special*) malloc (sizeof(struct special));
     if(nod_nou!=NULL){
         nod_nou->index=index;
         strcpy(nod_nou->comanda,com);
         nod_nou->pozitii=pozitii;
         nod_nou->next=NULL;
     }
     ptr->next=nod_nou;
     return head;
}
struct baza_date *adauga_celula(struct baza_date *baza, int index, char comanda[31], int pozitii){
    baza->speciale[index]=adauga_special(baza->speciale[index],index,comanda,pozitii);
    return baza;
}
void afisare_lista(struct special *head){
    struct special *ptr=head;
    while(ptr!=NULL){
        if(ptr->pozitii!=0)
        printf("%d %s %d\n",ptr->index, ptr->comanda, ptr->pozitii);
        else if(ptr->pozitii==0)
        printf("%d %s\n",ptr->index, ptr->comanda);
        ptr=ptr->next;
    }
}
void afisare_hash(struct baza_date *baza, int m){
    for(int i=0;i<m;++i){
        afisare_lista(baza->speciale[i]);
    }
}
int avansare_harta(struct baza_date *baza, int celula_curenta, int zar, int m){
    int pozitie_curenta;
    struct special *ptr;
    pozitie_curenta=celula_curenta+zar;
    for(int i=0;i<m;++i){
        ptr=baza->speciale[i];
        if(pozitie_curenta==i){
            if(ptr!=NULL){
                if(strcmp(ptr->comanda,"avanseaza")==0)
                pozitie_curenta+=ptr->pozitii;
                else if(strcmp(ptr->comanda,"intoarce")==0)
                pozitie_curenta-=ptr->pozitii;
                else if(strcmp(ptr->comanda,"dubleaza")==0)
                    pozitie_curenta+=zar;
                
            }
        }
    }
    return pozitie_curenta;
}


int main(){
    int n,x,index,intreg;
    int pozitii;
    char comanda[31];
    scanf("%d",&n);
    scanf("%d",&x);
    struct baza_date *baza;
    struct special *lista_speciala=NULL;
    baza=(struct baza_date*) malloc (sizeof(struct baza_date));
    baza->speciale=(struct special**) malloc (n*sizeof(struct special*));
    for(int i=0;i<n;++i)
    baza->speciale[i]=NULL;
    for(int i=0;i<x;++i){
        scanf("%d",&index);
        scanf("%s",comanda);
        if(strcmp(comanda,"avanseaza")==0 || strcmp(comanda,"intoarce")==0){
        scanf("%d",&pozitii);
        baza=adauga_celula(baza,index,comanda,pozitii);
        }
        else if(strcmp(comanda,"dubleaza")==0)
                baza=adauga_celula(baza,index,comanda,0);

    }
    scanf("%d",&intreg);
    if(intreg==1)
    afisare_hash(baza,n);
    if(intreg==2){
        int celula_curenta;
        int zar;
        scanf("%d %d",&celula_curenta, &zar);
        printf("%d",avansare_harta(baza,celula_curenta,zar,n));
    }
    if(intreg==3){
        int zar;
        int c=0;
        int afisat=0;
        int pozitie_jucator1=0, pozitie_jucator2=0;
        int castigator=0;
        while(scanf("%d",&zar)!=EOF){
            if(c%2==0&&pozitie_jucator1<n)
            pozitie_jucator1=avansare_harta(baza,pozitie_jucator1,zar,n);
            else if(c%2==1&&pozitie_jucator2<n)
            pozitie_jucator2=avansare_harta(baza,pozitie_jucator2,zar,n);
            c++;
            if(pozitie_jucator1>61 && afisat==0){
                printf("1\n");
                printf("%d\n",pozitie_jucator2);
                afisat=1;
            }
            else if(pozitie_jucator2>61 && afisat==0){
                 printf("2\n");
                printf("%d\n",pozitie_jucator1);
                afisat=1;
            }
        }
         
    }
    return 0;
}
